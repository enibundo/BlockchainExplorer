@page "/numberconverter"
@using ChainExplorerWeb.Data
@using global::ChainExplorer.Reader

@inject NumConverter NumConverter

<table class="table table-bordered">

<thead class="thead-dark">
<tr>
<th scope="col">Conversion between different number representations:</th>
<th scope="col">Result</th>
</tr>

</thead>


<tr>
<td>
<h4>Hexadecimal to decimal (ex: deadbeef)</h4>
<input type="text" class="form-control" @bind="@HexToDec"/><br/>
<button class="btn btn-info" @onclick="@ConvertHexToDec">Convert</button>
</td>
<td>@ResultHexToDec</td>
</tr>

<tr>
<td>
<h4>Decimal hexadecimal (ex: 42)</h4>
<input type="text" class="form-control" @bind="@DecToHex"/><br/>
<button class="btn btn-info" @onclick="@ConvertDecToHex">Convert</button>
</td>
<td>@ResultDecToHex</td>
</tr>

<tr>
<td>
<h4>Hexadecimal little endian to hexadecimal (ex: efbeadde)</h4>
<input type="text" class="form-control" @bind="@HexLeToHex"/><br/>
<button class="btn btn-info" @onclick="@ConvertHexLeToHex">Convert</button>
</td>
<td>@ResultHexLeToHex</td>
</tr>

<tr>
<td>
<h4>VarInt to decimal (ex: fdbeef)</h4>
<input type="text" class="form-control" @bind="@VarIntToDecimal"/><br/>
<button class="btn btn-info" @onclick="@ConvertVarIntToDecimal">Convert</button>
</td>
<td>@ResultVarIntToDec</td>
</tr>

<tr>
<td>
<h4>Bits to Target (ex: cb04041b)</h4>
<input type="text" class="form-control" @bind="@BitsToTarget"/><br/>
<button class="btn btn-info" @onclick="@ConvertBitsToTarget">Convert</button>
</td>
<td>@ResultBitsToTarget</td>
</tr>


<tr>
<td>
<h4>Bits to Difficulty (ex: cb04041b)</h4>
<input type="text" class="form-control" @bind="@BitsToDifficulty"/><br/>
<button class="btn btn-info" @onclick="@ConvertBitsToDifficulty">Convert</button>
</td>
<td>@ResultBitsToDifficulty</td>
</tr>

</table>

@code {
    
    private string HexToDec { get; set; }
    private string DecToHex { get; set; }
    private string HexLeToHex { get; set; }
    private string VarIntToDecimal { get; set; }
    private string BitsToTarget { get; set; }    
    private string BitsToDifficulty { get; set; }

    private string ResultHexToDec{ get; set; }
    private string ResultDecToHex { get; set; }
    private string ResultHexLeToHex { get; set; }
    private string ResultVarIntToDec { get; set; }
    private string ResultBitsToTarget { get; set; }
    private string ResultBitsToDifficulty { get; set; }

    private void ConvertHexToDec()
        => ResultHexToDec = NumConverter.ConvertHexToDec(HexToDec);
    
    private void ConvertDecToHex()
        => ResultDecToHex = NumConverter.ConvertDecToHex(DecToHex);

    private void ConvertHexLeToHex()
        => ResultHexLeToHex = NumConverter.ConvertHexLeToHex(HexLeToHex);

    private void ConvertVarIntToDecimal()
        => ResultVarIntToDec = NumConverter.ConvertVarIntToDecimal(VarIntToDecimal);

    private void ConvertBitsToTarget()
        => ResultBitsToTarget = NumConverter.ConvertBitsLeToTarget(BitsToTarget);

    private void ConvertBitsToDifficulty()
        => ResultBitsToDifficulty = NumConverter.ConvertBitsToDifficulty(BitsToDifficulty);

}